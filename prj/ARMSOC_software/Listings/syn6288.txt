; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\syn6288.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\syn6288.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\include -I.\TTS -I.\OLED -I.\ucosii\config -I.\ucosii\port -I.\ucosii\source -I.\RTE\_Target_1 -ID:\Coding\MDKeil\ARM\PACK\ARM\CMSIS\5.4.0\Device\ARM\ARMCM3\Include -ID:\Coding\MDKeil\ARM\CMSIS\Include -D__UVISION_VERSION=525 -DARMCM3 --omf_browse=.\objects\syn6288.crf TTS\SYN6288.C]
                          THUMB

                          AREA ||i.PrintCom||, CODE, READONLY, ALIGN=1

                  PrintCom PROC
;;;46     
;;;47     void PrintCom(uint8_t *DAT,uint8_t len)
000000  b570              PUSH     {r4-r6,lr}
;;;48     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;49     	uint8_t i;
;;;50     	for(i=0;i<len;i++)
000006  2600              MOVS     r6,#0
000008  e005              B        |L1.22|
                  |L1.10|
;;;51     	{
;;;52     	 	Uart1Putc(*DAT++);
00000a  f8140b01          LDRB     r0,[r4],#1
00000e  f7fffffe          BL       Uart1Putc
000012  1c70              ADDS     r0,r6,#1              ;50
000014  b2c6              UXTB     r6,r0                 ;50
                  |L1.22|
000016  42ae              CMP      r6,r5                 ;50
000018  dbf7              BLT      |L1.10|
;;;53     	}	
;;;54     }
00001a  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.SYN_FrameInfo||, CODE, READONLY, ALIGN=2

                  SYN_FrameInfo PROC
;;;11     
;;;12     void SYN_FrameInfo(uint8_t Music,char *HZdata)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;13     {
000004  b08e              SUB      sp,sp,#0x38
000006  4680              MOV      r8,r0
000008  460e              MOV      r6,r1
;;;14     /****************需要发送的文本**********************************/ 
;;;15     		 unsigned  char  Frame_Info[50] = {0xfd};
00000a  212e              MOVS     r1,#0x2e
00000c  a802              ADD      r0,sp,#8
00000e  f7fffffe          BL       __aeabi_memclr4
000012  481c              LDR      r0,|L2.132|
000014  6800              LDR      r0,[r0,#0]  ; <Data1>
000016  9001              STR      r0,[sp,#4]
;;;16              unsigned  char  HZ_Length;  
;;;17     		 unsigned  char  ecc  = 0;  			//定义校验字节
000018  2700              MOVS     r7,#0
;;;18     	     unsigned  int i=0; 
00001a  2400              MOVS     r4,#0
;;;19     		 HZ_Length = strlen(HZdata); 			//需要发送文本的长度
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       strlen
000022  b2c5              UXTB     r5,r0
;;;20       
;;;21     /*****************帧固定配置信息**************************************/           
;;;22     																//构造帧头FD
;;;23     		 Frame_Info[1] = 0x00 ; 		//构造数据区长度的高字节
000024  2000              MOVS     r0,#0
000026  f88d0005          STRB     r0,[sp,#5]
;;;24     		 Frame_Info[2] = HZ_Length + 3;		//构造数据区长度的低字节
00002a  1ce8              ADDS     r0,r5,#3
00002c  b2c0              UXTB     r0,r0
00002e  f88d0006          STRB     r0,[sp,#6]
;;;25     		 Frame_Info[3] = 0x01 ; 			//构造命令字：合成播放命令		 		 
000032  2001              MOVS     r0,#1
000034  f88d0007          STRB     r0,[sp,#7]
;;;26     		 Frame_Info[4] = 0x01 | Music<<4 ;  //构造命令参数：背景音乐设定
000038  ea401008          ORR      r0,r0,r8,LSL #4
00003c  b2c0              UXTB     r0,r0
00003e  f88d0008          STRB     r0,[sp,#8]
;;;27     	
;;;28     	
;;;29     	
;;;30     
;;;31     /*******************校验码计算***************************************/		 
;;;32     		 for(i = 0; i<5; i++)   				//依次发送构造好的5个帧头字节
000042  bf00              NOP      
000044  e003              B        |L2.78|
                  |L2.70|
;;;33     	     {  
;;;34     	         ecc=ecc^(Frame_Info[i]);		//对发送的字节进行异或校验	
000046  a801              ADD      r0,sp,#4
000048  5d00              LDRB     r0,[r0,r4]
00004a  4047              EORS     r7,r7,r0
00004c  1c64              ADDS     r4,r4,#1              ;32
                  |L2.78|
00004e  2c05              CMP      r4,#5                 ;32
000050  d3f9              BCC      |L2.70|
;;;35     	     }
;;;36     
;;;37     	   	 for(i= 0; i<HZ_Length; i++)   		//依次发送待合成的文本数据
000052  2400              MOVS     r4,#0
000054  e002              B        |L2.92|
                  |L2.86|
;;;38     	     {  
;;;39     	         ecc=ecc^(HZdata[i]); 				//对发送的字节进行异或校验		
000056  5d30              LDRB     r0,[r6,r4]
000058  4047              EORS     r7,r7,r0
00005a  1c64              ADDS     r4,r4,#1              ;37
                  |L2.92|
00005c  42ac              CMP      r4,r5                 ;37
00005e  d3fa              BCC      |L2.86|
;;;40     	     }		 
;;;41     /*******************发送帧信息***************************************/		  
;;;42     		  memcpy(&Frame_Info[5], HZdata, HZ_Length);
000060  462a              MOV      r2,r5
000062  4631              MOV      r1,r6
000064  f10d0009          ADD      r0,sp,#9
000068  f7fffffe          BL       __aeabi_memcpy
;;;43     		  Frame_Info[5+HZ_Length]=ecc;
00006c  1d68              ADDS     r0,r5,#5
00006e  a901              ADD      r1,sp,#4
000070  540f              STRB     r7,[r1,r0]
;;;44     		  PrintCom(Frame_Info,5+HZ_Length+1);
000072  1da8              ADDS     r0,r5,#6
000074  b2c1              UXTB     r1,r0
000076  a801              ADD      r0,sp,#4
000078  f7fffffe          BL       PrintCom
;;;45     }
00007c  b00e              ADD      sp,sp,#0x38
00007e  e8bd81f0          POP      {r4-r8,pc}
;;;46     
                          ENDP

000082  0000              DCW      0x0000
                  |L2.132|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  fd000000          DCB      0xfd,0x00,0x00,0x00

                          AREA ||.data||, DATA, ALIGN=0

                  SYN_StopCom
000000  fd000202          DCB      0xfd,0x00,0x02,0x02
000004  fd                DCB      0xfd
                  SYN_SuspendCom
000005  fd0002            DCB      0xfd,0x00,0x02
000008  03fc              DCB      0x03,0xfc
                  SYN_RecoverCom
00000a  fd00              DCB      0xfd,0x00
00000c  0204fb            DCB      0x02,0x04,0xfb
                  SYN_ChackCom
00000f  fd                DCB      0xfd
000010  000221de          DCB      0x00,0x02,0x21,0xde
                  SYN_PowerDownCom
000014  fd000288          DCB      0xfd,0x00,0x02,0x88
000018  77                DCB      0x77

;*** Start embedded assembler ***

#line 1 "TTS\\SYN6288.C"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_SYN6288_C_04e53b5d____REV16|
#line 129 ".\\include\\core_cmInstr.h"
|__asm___9_SYN6288_C_04e53b5d____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_SYN6288_C_04e53b5d____REVSH|
#line 144
|__asm___9_SYN6288_C_04e53b5d____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
